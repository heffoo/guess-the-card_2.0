{"version":3,"sources":["components/cards-list.js","components/cards-list_5x4.js","components/results.js","components/card/card.js","App.js","reportWebVitals.js","index.js"],"names":["CARDS_LIST","id","img","color","BIG_CARDS_LIST","Results","gamePeriod","endDate","setGamePeriod","steps","setGameType","setCardsType","gameType","cardsType","useState","startDate","setStartDate","time","Math","round","toString","split","accurateTime","length","className","onClick","a","Date","now","join","toFixed","alert","window","location","reload","Card","card","index","flippedArr","guessedCards","flip","some","flat","find","alt","src","App","setFlippedArr","setGuessedCards","newArray","setNewArray","setEndDate","setSteps","lockBoard","useEffect","copy","concat","sort","random","name","prevState","disableCards","oneFlipped","unFlip","setTimeout","filter","obj","checkDifference","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAaA,G,MAAa,CACxB,CACEC,GAAI,OACJC,IAAK,IACLC,MAAO,OAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,OAGT,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,SAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,SAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,YC5DEC,EAAiB,CAC5B,CACEH,GAAI,OACJC,IAAK,IACLC,MAAO,OAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,OAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,SAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,SAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,UAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,IACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,QAET,CACEF,GAAI,OACJC,IAAK,KACLC,MAAO,QAET,CACEF,GAAI,QACJC,IAAK,KACLC,MAAO,QAET,CACEF,GAAI,QACJC,IAAK,KACLC,MAAO,S,eC/FEE,EAAU,SAAC,GAAmG,IAAjGC,EAAgG,EAAhGA,WAAYC,EAAoF,EAApFA,QAASC,EAA2E,EAA3EA,cAAeC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAAgB,EACtFC,mBAAS,MAD6E,mBACjHC,EADiH,KACtGC,EADsG,KASpHC,EAAOC,KAAKC,OAAOZ,EAAUQ,GAAa,KAC3CK,WACAC,MAAM,IAELC,EAAyC,IAA1BL,EAAKA,EAAKM,OAAS,IAAY,EAElD,OACE,8BACkB,UAAfjB,EACC,qBAAKkB,UAAU,gBAAf,SACE,gCACE,6WAEA,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAwB,QAAbZ,EAAqB,gCAAkC,yBAA2Ba,QAAS,kBAAMf,EAAY,QAAhI,iBAGA,wBAAQc,UAAwB,QAAbZ,EAAqB,gCAAkC,yBAA2Ba,QAAS,kBAAMf,EAAY,QAAhI,iBAGA,wBAAQc,UAAyB,SAAdX,EAAuB,gCAAkC,yBAA4BY,QAAS,kBAAMd,EAAa,SAApI,kBAGA,wBAAQa,UAAyB,WAAdX,EAAyB,gCAAkC,yBAA4BY,QAAS,kBAAMd,EAAa,WAAtI,oBAGC,wBAAQa,UAAU,qBAAqBC,QAhC/B,WACnBjB,EAAc,WACd,IAAIkB,EAAIC,KAAKC,MACbZ,EAAaU,IA6BF,sEAMU,QAAfpB,EACF,qBAAKkB,UAAU,gBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,wBAAd,iFACA,sBAAKA,UAAU,2BAAf,qEAEE,qCAAQP,EAAKY,KAAK,IAAM,KAAOtB,EAAUQ,GAAa,KAAOe,QAAQ,GAAKb,EAA1E,OACCA,EAAKY,KAAK,IAAM,GACf,4BAAIP,EAAe,iCAAU,yCAE7B,4BAAIA,EAAe,uCAAW,+CANlC,qFAQoBb,EAAQ,EAR5B,qCAUA,qBAAKe,UAAU,YACf,wBAAQA,UAAU,wBAAwBC,QAAS,kBAAMM,MAAM,0CAA/D,sCAGA,wBAAQP,UAAU,wBAAwBC,QAAS,kBAAMO,OAAOC,SAASC,UAAzE,iGAKF,QClEGC,G,MAAO,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAM3B,EAAgB,EAAhBA,UAClE,OACE,sBAEEW,UACEc,EAAWG,MAAK,SAACf,GAAD,OAAOA,EAAEW,QAAUA,MAAUE,EAAaG,OAAOC,MAAK,SAACjB,GAAD,OAAOA,EAAEW,QAAUA,KACrF,YACA,OAENZ,QAAS,kBAAMe,EAAKH,EAAOD,EAAKnC,KAPlC,UASE,qBAAKuB,UAAU,cACA,SAAdX,EACC,qBAAKW,UAAU,aAAaoB,IAAI,MAAMC,IAAG,+CAA0CT,EAAKlC,OAExF,qBAAKsB,UAAS,qBAAgBY,EAAKjC,WAZhCkC,KCsGIS,MApGf,WAAgB,IAAD,EACuBhC,mBAAS,IADhC,mBACNwB,EADM,KACMS,EADN,OAE2BjC,mBAAS,IAFpC,mBAENyB,EAFM,KAEQS,EAFR,OAGmBlC,mBAAS,IAH5B,mBAGNmC,EAHM,KAGIC,EAHJ,OAIuBpC,mBAAS,SAJhC,mBAINR,EAJM,KAIME,EAJN,OAKiBM,mBAAS,GAL1B,mBAKNP,EALM,KAKG4C,EALH,OAMarC,mBAAS,GANtB,mBAMNL,EANM,KAMC2C,EAND,OAOmBtC,mBAAS,OAP5B,mBAONF,EAPM,KAOIF,EAPJ,OAQqBI,mBAAS,QAR9B,mBAQND,EARM,KAQKF,EARL,KAUT0C,GAAY,EAEhBC,qBAAU,WACR,IACIC,EAAO,GAAGC,OADS,QAAb5C,EAAqBZ,EAAaI,GAE5C8C,EACEK,EAAKE,MAAK,WACR,MAAO,GAAMvC,KAAKwC,eAGrB,CAAC9C,IAEJ0C,qBAAU,WACR,GACgB,QAAb1C,GAAqD,KAA/B2B,EAAaG,OAAOnB,QAC7B,QAAbX,GAAqD,KAA/B2B,EAAaG,OAAOnB,OAC3C,CACAf,EAAc,OAEd,IAAIkB,EAAIC,KAAKC,MACbuB,EAAWzB,GAEb,OAAO,OACN,CAACa,IAEJ,IAAMC,EAAO,SAACH,EAAOsB,GACfN,GACe,YAAf/C,IACJ8C,EAAS3C,EAAQ,GACjBsC,GAAc,SAACa,GAAD,4BAAmBA,GAAnB,CAA8B,CAAEvB,MAAOA,EAAOsB,KAAMA,UAS9DE,EAAe,SAACC,GACpBd,GAAgB,SAACY,GAAD,4BAAmBA,GAAnB,CAA8BE,OAC9CT,GAAY,EACZN,EAAc,KAGVgB,EAAS,WACbC,YAAW,WACTjB,EAAc,IACdM,GAAY,IACX,MASL,OAN0B,IAAtBf,EAAWf,SACb8B,GAAY,EApBU,WACtB,IAAIS,EAAaxB,EAAW2B,QAAO,SAACC,GAAD,OAASA,KAE5CJ,EAAW,GAAGH,OAASG,EAAW,GAAGH,KAAOE,EAAaC,GAAcC,IAmBvEI,IAIA,sBAAK3C,UAAU,MAAf,UACE,sBAAMA,UAAU,UAAhB,mBACA,sBAAKA,UAAwB,QAAbZ,EAAqB,iBAAmB,iBAAxD,UACE,cAAC,EAAD,CACEL,QAASA,EACTgC,aAAcA,EACdjC,WAAYA,EACZE,cAAeA,EACfC,MAAOA,EACPC,YAAaA,EACbC,aAAcA,EACdC,SAAUA,EACVC,UAAWA,IAEb,qBAAKW,UAAU,YAAf,SACGyB,EAASmB,KAAI,SAAChC,EAAMC,GAAP,OACZ,cAAC,EAAD,CAEExB,UAAWA,EACXuB,KAAMA,EACNC,MAAOA,EACPE,aAAcA,EACdD,WAAYA,EACZE,KAAMA,GANDH,eChFJgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d045574.chunk.js","sourcesContent":["export const CARDS_LIST = [\n  {\n    id: \"cat1\",\n    img: \"2\",\n    color: 'red',\n  },\n  {\n    id: \"cat1\",\n    img: \"2\",\n    color: 'red',\n\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n    color: 'yellow',\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n    color: 'yellow',\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n    color: 'orange',\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n    color: 'orange',\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n    color: 'blue',\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n    color: 'blue',\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n    color: 'green',\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n    color: 'green',\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n    color: 'purple',\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n    color: 'purple',\n  },\n];\n","export const BIG_CARDS_LIST = [\n  {\n    id: \"cat1\",\n    img: \"2\",\n    color: \"red\",\n  },\n  {\n    id: \"cat1\",\n    img: \"2\",\n    color: \"red\",\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n    color: \"yellow\",\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n    color: \"yellow\",\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n    color: \"orange\",\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n    color: \"orange\",\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n    color: \"blue\",\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n    color: \"blue\",\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n    color: \"green\",\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n    color: \"green\",\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n    color: \"purple\",\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n    color: \"purple\",\n  },\n  {\n    id: \"cat7\",\n    img: \"1\",\n    color: \"lime\",\n  },\n  {\n    id: \"cat7\",\n    img: \"1\",\n    color: \"lime\",\n  },\n  {\n    id: \"cat8\",\n    img: \"15\",\n    color: \"aqua\",\n  },\n  {\n    id: \"cat8\",\n    img: \"15\",\n    color: \"aqua\",\n  },\n  {\n    id: \"cat9\",\n    img: \"16\",\n    color: \"cyan\",\n  },\n  {\n    id: \"cat9\",\n    img: \"16\",\n    color: \"cyan\",\n  },\n  {\n    id: \"cat10\",\n    img: \"10\",\n    color: \"gray\",\n  },\n  {\n    id: \"cat10\",\n    img: \"10\",\n    color: \"gray\",\n  },\n];\n","import { useState } from \"react\";\n\nimport \"./modal.scss\";\n\nexport const Results = ({ gamePeriod, endDate, setGamePeriod, steps, setGameType, setCardsType, gameType, cardsType }) => {\n  const [startDate, setStartDate] = useState(null);\n\n  const counterStart = () => {\n    setGamePeriod(\"started\");\n    let a = Date.now();\n    setStartDate(a);\n  };\n\n  let time = Math.round((endDate - startDate) / 1000)\n    .toString()\n    .split(\"\");\n\n  let accurateTime = time[time.length - 1] === 3 || 2 || 1 || 4;\n\n  return (\n    <div>\n      {gamePeriod === \"start\" ? (\n        <div className=\"results-modal\">\n          <div>\n            <p> типичная игра \"найди пару\". правила просты: надо просто найти пару</p>\n           \n            <div className=\"side-buttons\">\n              <button className={gameType === '3x4' ? \"side-buttons__butttons active\" : \"side-buttons__butttons\" } onClick={() => setGameType(\"3x4\")}>\n                3x4\n              </button>\n              <button className={gameType === '5x4' ? \"side-buttons__butttons active\" : \"side-buttons__butttons\" } onClick={() => setGameType(\"5x4\")}>\n                5x4\n              </button>\n              <button className={cardsType === 'cats' ? \"side-buttons__butttons active\" : \"side-buttons__butttons\" }  onClick={() => setCardsType(\"cats\")}>\n                cats\n              </button>\n              <button className={cardsType === 'colors' ? \"side-buttons__butttons active\" : \"side-buttons__butttons\" }  onClick={() => setCardsType(\"colors\")}>\n                colors\n              </button>\n               <button className=\"modal-button-start\" onClick={counterStart}>\n              стартуем\n            </button>\n            </div>\n          </div>\n        </div>\n      ) : gamePeriod === \"end\" ? (\n        <div className=\"results-modal\">\n          <div className=\"results-modal__body\">\n            <h1 className=\"results-modal__header\">вы закончили</h1>\n            <div className=\"results-modal__statistic\">\n              на это ушло\n              <span> {time.join(\"\") > 60 ? ((endDate - startDate) / 60000).toFixed(2) : time} </span>\n              {time.join(\"\") > 60 ? (\n                <p>{accurateTime ? \"минут\" : \"минуты\"}</p>\n              ) : (\n                <p>{accurateTime ? \"секунд\" : \"секунды\"}</p>\n              )}\n              а еще вы сделали {steps / 2} шагов\n            </div>\n            <div className=\"buttons\"></div>\n            <button className=\"buttons__modal-button\" onClick={() => alert(\"ну блин\")}>\n              блин\n            </button>\n            <button className=\"buttons__modal-button\" onClick={() => window.location.reload()}>\n              перезапустить\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import \"./card.scss\";\n\nexport const Card = ({ card, index, flippedArr, guessedCards, flip, cardsType }) => {\n  return (\n    <div\n      key={index}\n      className={\n        flippedArr.some((a) => a.index === index) || guessedCards.flat().find((a) => a.index === index)\n          ? \"card flip\"\n          : \"card\"\n      }\n      onClick={() => flip(index, card.id)}\n    >\n      <div className=\"back-face\"></div>\n      {cardsType === \"cats\" ? (\n        <img className=\"front-face\" alt=\"img\" src={`http://placekitten.com/200/300?image=${card.img}`} />\n      ) : (\n        <div className={`front-face ${card.color}`}></div>\n      )}\n    </div>\n  );\n};\n","import \"./App.scss\";\nimport { CARDS_LIST } from \"./components/cards-list\";\nimport { BIG_CARDS_LIST } from \"./components/cards-list_5x4\";\nimport { useEffect, useState } from \"react\";\nimport { Results } from \"./components/results\";\nimport { Card } from \"./components/card/card\";\n\nfunction App() {\n  const [flippedArr, setFlippedArr] = useState([]);\n  const [guessedCards, setGuessedCards] = useState([]);\n  const [newArray, setNewArray] = useState([]);\n  const [gamePeriod, setGamePeriod] = useState(\"start\");\n  const [endDate, setEndDate] = useState(0);\n  const [steps, setSteps] = useState(0);\n  const [gameType, setGameType] = useState(\"3x4\");\n  const [cardsType, setCardsType] = useState(\"cats\");\n\n  let lockBoard = false;\n\n  useEffect(() => {\n    let arr = gameType === \"3x4\" ? CARDS_LIST : BIG_CARDS_LIST;\n    var copy = [].concat(arr);\n    setNewArray(\n      copy.sort(function () {\n        return 0.5 - Math.random();\n      })\n    );\n  }, [gameType]);\n\n  useEffect(() => {\n    if (\n      (gameType === \"3x4\" && guessedCards.flat().length === 12) ||\n      (gameType === \"5x4\" && guessedCards.flat().length === 20)\n    ) {\n      setGamePeriod(\"end\");\n\n      let a = Date.now();\n      setEndDate(a);\n    }\n    return null;\n  }, [guessedCards]);\n\n  const flip = (index, name) => {\n    if (lockBoard) return;\n    if (gamePeriod !== \"started\") return;\n    setSteps(steps + 1);\n    setFlippedArr((prevState) => [...prevState, { index: index, name: name }]);\n  };\n\n  const checkDifference = () => {\n    let oneFlipped = flippedArr.filter((obj) => obj);\n\n    oneFlipped[0].name === oneFlipped[1].name ? disableCards(oneFlipped) : unFlip();\n  };\n\n  const disableCards = (oneFlipped) => {\n    setGuessedCards((prevState) => [...prevState, oneFlipped]);\n    lockBoard = false;\n    setFlippedArr([]);\n  };\n\n  const unFlip = () => {\n    setTimeout(() => {\n      setFlippedArr([]);\n      lockBoard = false;\n    }, 700);\n  };\n\n  if (flippedArr.length === 2) {\n    lockBoard = true;\n\n    checkDifference();\n  }\n\n  return (\n    <div className=\"App\">\n      <span className=\"version\">1.0.1</span>\n      <div className={gameType === \"3x4\" ? \"main-block_4x3\" : \"main-block_5x4\"}>\n        <Results\n          endDate={endDate}\n          guessedCards={guessedCards}\n          gamePeriod={gamePeriod}\n          setGamePeriod={setGamePeriod}\n          steps={steps}\n          setGameType={setGameType}\n          setCardsType={setCardsType}\n          gameType={gameType}\n          cardsType={cardsType}\n        />\n        <div className=\"card-list\">\n          {newArray.map((card, index) => (\n            <Card\n              key={index}\n              cardsType={cardsType}\n              card={card}\n              index={index}\n              guessedCards={guessedCards}\n              flippedArr={flippedArr}\n              flip={flip}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}