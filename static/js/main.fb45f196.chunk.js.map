{"version":3,"sources":["components/cards-list.js","components/results.js","App.js","reportWebVitals.js","index.js"],"names":["CARDS_LIST","id","img","Results","gamePeriod","endDate","setGamePeriod","steps","useState","startDate","setStartDate","time","Math","round","toString","split","className","onClick","a","Date","now","join","toFixed","length","alert","window","location","reload","App","flippedArr","setFlippedArr","guessedCards","setGuessedCards","newArray","setnewArray","setEndDate","setSteps","lockBoard","useEffect","copy","concat","sort","random","flat","disableCards","obj","prevState","unFlip","setTimeout","c","filter","name","checkDifference","map","card","index","some","find","e","flip","alt","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb45f196.chunk.js","sourcesContent":["export const CARDS_LIST = [\n  {\n    id: \"cat1\",\n    img: \"2\",\n  },\n  {\n    id: \"cat1\",\n    img: \"2\",\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n  },\n  {\n    id: \"cat2\",\n    img: \"3\",\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n  },\n  {\n    id: \"cat3\",\n    img: \"4\",\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n  },\n  {\n    id: \"cat4\",\n    img: \"5\",\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n  },\n  {\n    id: \"cat5\",\n    img: \"12\",\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n  },\n  {\n    id: \"cat6\",\n    img: \"13\",\n  },\n];\n","import { useState } from \"react\";\n\nimport \"./modal.scss\";\n\nexport const Results = ({ gamePeriod, endDate, setGamePeriod, steps }) => {\n  const [startDate, setStartDate] = useState(null);\n\n  const counterStart = () => {\n    setGamePeriod(\"started\");\n    let a = Date.now();\n    setStartDate(a);\n  };\n  let time = Math.round((endDate - startDate) / 1000)\n    .toString()\n    .split(\"\");\n\n  return (\n    <div>\n      {gamePeriod === \"start\" ? (\n        <div className=\"results-modal\">\n          <div>\n            <p> типичная игра \"найди пару\". правила просты: надо просто найти пару</p>\n            <button className=\"modal-button\" onClick={counterStart}>\n              стартуем\n            </button>\n          </div>\n        </div>\n      ) : gamePeriod === \"end\" ? (\n        <div className=\"results-modal\">\n          <div>\n            <p>вы закончили</p>\n            <div>\n              на это ушло\n              <span> {time.join(\"\") > 60 ? ((endDate - startDate) / 60000).toFixed(2) : time} </span>\n              {time.join(\"\") > 60 ? (\n                <p>{time[time.length - 1] === 3 || 2 || 1 || 4 ? \"минут\" : \"минуты\"}</p>\n              ) : (\n                <p>{time[time.length - 1] === 3 || 2 || 1 || 4 ? \"секунд\" : \"секунды\"}</p>\n              )}\n              а еще вы сделали {steps / 2} шагов\n            </div>\n            <button className=\"modal-button\" onClick={() => alert('ну блин')}>блин</button>\n            <button className=\"modal-button\" onClick={() => window.location.reload()}>\n              перезапустить\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import \"./App.scss\";\nimport { CARDS_LIST } from \"./components/cards-list\";\nimport { useEffect, useState } from \"react\";\nimport { Results } from \"./components/results\";\n\nfunction App() {\n  const [flippedArr, setFlippedArr] = useState([]);\n  const [guessedCards, setGuessedCards] = useState([]);\n  const [newArray, setnewArray] = useState([]);\n  const [gamePeriod, setGamePeriod] = useState(\"start\");\n  const [endDate, setEndDate] = useState(0);\n  const [steps, setSteps] = useState(0);\n  let lockBoard = false;\n\n  useEffect(() => {\n    var copy = [].concat(CARDS_LIST);\n    setnewArray(\n      copy.sort(function () {\n        return 0.5 - Math.random();\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    if (guessedCards.flat().length === 12) {\n      setGamePeriod(\"end\");\n\n      let a = Date.now();\n      setEndDate(a);\n    }\n    return null;\n  }, [guessedCards]);\n\n  const flip = (index, name) => {\n    if (lockBoard) return;\n    if(gamePeriod !== 'started') return;\n    setSteps(steps + 1);\n    setFlippedArr((prevState) => [...prevState, { index: index, name: name }]);\n  };\n\n  const checkDifference = () => {\n    let c = flippedArr.filter((obj) => obj);\n\n    c[0].name === c[1].name ? disableCards(c) : unFlip();\n  };\n\n  const disableCards = (obj) => {\n    setGuessedCards((prevState) => [...prevState, obj]);\n    lockBoard = false;\n    setFlippedArr([]);\n  };\n\n  const unFlip = () => {\n    setTimeout(() => {\n      setFlippedArr([]);\n      lockBoard = false;\n    }, 700);\n  };\n\n  if (flippedArr.length === 2) {\n    lockBoard = true;\n\n    checkDifference();\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Results\n          endDate={endDate}\n          guessedCards={guessedCards}\n          gamePeriod={gamePeriod}\n          setGamePeriod={setGamePeriod}\n          steps={steps}\n        />\n        <div className=\"card-list\">\n          {newArray.map((card, index) => (\n            <div\n              key={index}\n              className={\n                flippedArr.some((a) => a.index === index) || guessedCards.flat().find((a) => a.index === index)\n                  ? \"card flip\"\n                  : \"card\"\n              }\n              onClick={(e) => flip(index, card.id)}\n            >\n              <div className=\"back-face\"></div>\n              <img className=\"front-face\" alt=\"img\" src={`http://placekitten.com/200/300?image=${card.img}`}></img>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}